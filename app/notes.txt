override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
                    val mapFragment = supportFragmentManager
                        .findFragmentById(R.id.map) as SupportMapFragment
                    mapFragment.getMapAsync(this) // Get the googleMap object asynchronously

                    // Register a launcher to handle the permission request result
                    requestPermissionLauncher = registerForActivityResult(ActivityResultContracts.RequestPermission()) {
                            isGranted ->
                        if (isGranted) {
                            getLocation() // Permission granted, get the location
                        } else {  // Permission denied, show rationale and request again
                            showPermissionRationale {
                                requestPermissionLauncher.launch(ACCESS_FINE_LOCATION)
                            }
                        }
                    }

                    // implement an onClick listener to the button
                    binding.btParkedHere.setOnClickListener {
                        if (hasLocationPermission()) {
                            moveCarToCurrentLocation()
                        } else {
                            requestPermissionLauncher.launch(ACCESS_FINE_LOCATION)
                        }
                    }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
            super.onCreate(savedInstanceState) // initializes the activity

            binding = ActivityMapsBinding.inflate(layoutInflater) // inflate the layout
            setContentView(binding.root) // set the content view

            // Obtain the SupportMapFragment and get notified when the map is ready to be used.
            val mapFragment = supportFragmentManager
                .findFragmentById(R.id.map) as SupportMapFragment
            mapFragment.getMapAsync(this) // Get the googleMap object asynchronously

            // Register a launcher to handle the permission request result
            requestPermissionLauncher = registerForActivityResult(ActivityResultContracts.RequestPermission()) {
                    isGranted ->
                if (isGranted) {
                    getLocation() // Permission granted, get the location
                } else {  // Permission denied, show rationale and request again
                    showPermissionRationale {
                        requestPermissionLauncher.launch(ACCESS_FINE_LOCATION)
                    }
                }
            }

            // implement an onClick listener to the button
            binding.btParkedHere.setOnClickListener {
                if (hasLocationPermission()) {
                    moveCarToCurrentLocation()
                } else {
                    requestPermissionLauncher.launch(ACCESS_FINE_LOCATION)
                }
            }

        } // end onCreate